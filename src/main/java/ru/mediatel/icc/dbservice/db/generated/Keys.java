/*
 * This file is generated by jOOQ.
 */
package ru.mediatel.icc.dbservice.db.generated;


import javax.annotation.processing.Generated;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;

import ru.mediatel.icc.dbservice.db.generated.tables.Carts;
import ru.mediatel.icc.dbservice.db.generated.tables.Claims;
import ru.mediatel.icc.dbservice.db.generated.tables.Interactions;
import ru.mediatel.icc.dbservice.db.generated.tables.Orders;
import ru.mediatel.icc.dbservice.db.generated.tables.Products;
import ru.mediatel.icc.dbservice.db.generated.tables.ProductsInCarts;
import ru.mediatel.icc.dbservice.db.generated.tables.ProductsInOrders;
import ru.mediatel.icc.dbservice.db.generated.tables.Tools;
import ru.mediatel.icc.dbservice.db.generated.tables.Users;
import ru.mediatel.icc.dbservice.db.generated.tables.records.CartsRecord;
import ru.mediatel.icc.dbservice.db.generated.tables.records.ClaimsRecord;
import ru.mediatel.icc.dbservice.db.generated.tables.records.InteractionsRecord;
import ru.mediatel.icc.dbservice.db.generated.tables.records.OrdersRecord;
import ru.mediatel.icc.dbservice.db.generated.tables.records.ProductsInCartsRecord;
import ru.mediatel.icc.dbservice.db.generated.tables.records.ProductsInOrdersRecord;
import ru.mediatel.icc.dbservice.db.generated.tables.records.ProductsRecord;
import ru.mediatel.icc.dbservice.db.generated.tables.records.ToolsRecord;
import ru.mediatel.icc.dbservice.db.generated.tables.records.UsersRecord;


/**
 * A class modelling foreign key relationships and constraints of tables in the
 * default schema.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.24"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CartsRecord> CARTS_PKEY = Internal.createUniqueKey(Carts.CARTS, DSL.name("carts_pkey"), new TableField[] { Carts.CARTS.ID }, true);
    public static final UniqueKey<ClaimsRecord> CLAIMS_PKEY = Internal.createUniqueKey(Claims.CLAIMS, DSL.name("claims_pkey"), new TableField[] { Claims.CLAIMS.ID }, true);
    public static final UniqueKey<InteractionsRecord> INTERACTIONS_PKEY = Internal.createUniqueKey(Interactions.INTERACTIONS, DSL.name("interactions_pkey"), new TableField[] { Interactions.INTERACTIONS.ID }, true);
    public static final UniqueKey<OrdersRecord> ORDERS_PKEY = Internal.createUniqueKey(Orders.ORDERS, DSL.name("orders_pkey"), new TableField[] { Orders.ORDERS.ID }, true);
    public static final UniqueKey<ProductsRecord> PRODUCTS_PKEY = Internal.createUniqueKey(Products.PRODUCTS, DSL.name("products_pkey"), new TableField[] { Products.PRODUCTS.ID }, true);
    public static final UniqueKey<ProductsInCartsRecord> UNIQUE_CART_PRODUCT = Internal.createUniqueKey(ProductsInCarts.PRODUCTS_IN_CARTS, DSL.name("unique_cart_product"), new TableField[] { ProductsInCarts.PRODUCTS_IN_CARTS.CART_ID, ProductsInCarts.PRODUCTS_IN_CARTS.PRODUCT_ID }, true);
    public static final UniqueKey<ProductsInOrdersRecord> UNIQUE_ORDER_PRODUCT = Internal.createUniqueKey(ProductsInOrders.PRODUCTS_IN_ORDERS, DSL.name("unique_order_product"), new TableField[] { ProductsInOrders.PRODUCTS_IN_ORDERS.ORDER_ID, ProductsInOrders.PRODUCTS_IN_ORDERS.PRODUCT_ID }, true);
    public static final UniqueKey<ToolsRecord> TOOLS_PKEY = Internal.createUniqueKey(Tools.TOOLS, DSL.name("tools_pkey"), new TableField[] { Tools.TOOLS.ID }, true);
    public static final UniqueKey<UsersRecord> USERS_EMAIL_KEY = Internal.createUniqueKey(Users.USERS, DSL.name("users_email_key"), new TableField[] { Users.USERS.EMAIL }, true);
    public static final UniqueKey<UsersRecord> USERS_PHONE_KEY = Internal.createUniqueKey(Users.USERS, DSL.name("users_phone_key"), new TableField[] { Users.USERS.PHONE }, true);
    public static final UniqueKey<UsersRecord> USERS_PKEY = Internal.createUniqueKey(Users.USERS, DSL.name("users_pkey"), new TableField[] { Users.USERS.ID }, true);
    public static final UniqueKey<UsersRecord> USERS_TG_KEY = Internal.createUniqueKey(Users.USERS, DSL.name("users_tg_key"), new TableField[] { Users.USERS.TG }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<CartsRecord, UsersRecord> CARTS__CARTS_USER_ID_FKEY = Internal.createForeignKey(Carts.CARTS, DSL.name("carts_user_id_fkey"), new TableField[] { Carts.CARTS.USER_ID }, Keys.USERS_PKEY, new TableField[] { Users.USERS.ID }, true);
    public static final ForeignKey<ClaimsRecord, OrdersRecord> CLAIMS__CLAIMS_ORDER_ID_FKEY = Internal.createForeignKey(Claims.CLAIMS, DSL.name("claims_order_id_fkey"), new TableField[] { Claims.CLAIMS.ORDER_ID }, Keys.ORDERS_PKEY, new TableField[] { Orders.ORDERS.ID }, true);
    public static final ForeignKey<InteractionsRecord, CartsRecord> INTERACTIONS__INTERACTIONS_CART_ID_FKEY = Internal.createForeignKey(Interactions.INTERACTIONS, DSL.name("interactions_cart_id_fkey"), new TableField[] { Interactions.INTERACTIONS.CART_ID }, Keys.CARTS_PKEY, new TableField[] { Carts.CARTS.ID }, true);
    public static final ForeignKey<InteractionsRecord, OrdersRecord> INTERACTIONS__INTERACTIONS_ORDER_ID_FKEY = Internal.createForeignKey(Interactions.INTERACTIONS, DSL.name("interactions_order_id_fkey"), new TableField[] { Interactions.INTERACTIONS.ORDER_ID }, Keys.ORDERS_PKEY, new TableField[] { Orders.ORDERS.ID }, true);
    public static final ForeignKey<OrdersRecord, CartsRecord> ORDERS__ORDERS_CART_ID_FKEY = Internal.createForeignKey(Orders.ORDERS, DSL.name("orders_cart_id_fkey"), new TableField[] { Orders.ORDERS.CART_ID }, Keys.CARTS_PKEY, new TableField[] { Carts.CARTS.ID }, true);
    public static final ForeignKey<OrdersRecord, UsersRecord> ORDERS__ORDERS_USER_ID_FKEY = Internal.createForeignKey(Orders.ORDERS, DSL.name("orders_user_id_fkey"), new TableField[] { Orders.ORDERS.USER_ID }, Keys.USERS_PKEY, new TableField[] { Users.USERS.ID }, true);
    public static final ForeignKey<ProductsInCartsRecord, CartsRecord> PRODUCTS_IN_CARTS__PRODUCTS_IN_CARTS_CART_ID_FKEY = Internal.createForeignKey(ProductsInCarts.PRODUCTS_IN_CARTS, DSL.name("products_in_carts_cart_id_fkey"), new TableField[] { ProductsInCarts.PRODUCTS_IN_CARTS.CART_ID }, Keys.CARTS_PKEY, new TableField[] { Carts.CARTS.ID }, true);
    public static final ForeignKey<ProductsInCartsRecord, ProductsRecord> PRODUCTS_IN_CARTS__PRODUCTS_IN_CARTS_PRODUCT_ID_FKEY = Internal.createForeignKey(ProductsInCarts.PRODUCTS_IN_CARTS, DSL.name("products_in_carts_product_id_fkey"), new TableField[] { ProductsInCarts.PRODUCTS_IN_CARTS.PRODUCT_ID }, Keys.PRODUCTS_PKEY, new TableField[] { Products.PRODUCTS.ID }, true);
    public static final ForeignKey<ProductsInOrdersRecord, OrdersRecord> PRODUCTS_IN_ORDERS__PRODUCTS_IN_ORDERS_ORDER_ID_FKEY = Internal.createForeignKey(ProductsInOrders.PRODUCTS_IN_ORDERS, DSL.name("products_in_orders_order_id_fkey"), new TableField[] { ProductsInOrders.PRODUCTS_IN_ORDERS.ORDER_ID }, Keys.ORDERS_PKEY, new TableField[] { Orders.ORDERS.ID }, true);
    public static final ForeignKey<ProductsInOrdersRecord, ProductsRecord> PRODUCTS_IN_ORDERS__PRODUCTS_IN_ORDERS_PRODUCT_ID_FKEY = Internal.createForeignKey(ProductsInOrders.PRODUCTS_IN_ORDERS, DSL.name("products_in_orders_product_id_fkey"), new TableField[] { ProductsInOrders.PRODUCTS_IN_ORDERS.PRODUCT_ID }, Keys.PRODUCTS_PKEY, new TableField[] { Products.PRODUCTS.ID }, true);
}
