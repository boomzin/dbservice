/*
 * This file is generated by jOOQ.
 */
package ru.mediatel.icc.dbservice.db.generated.tables.pojos;


import java.util.UUID;

import javax.annotation.processing.Generated;

import ru.mediatel.icc.dbservice.db.generated.tables.interfaces.IProductsInCarts;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.24"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ProductsInCarts implements IProductsInCarts {

    private static final long serialVersionUID = 1L;

    private UUID cartId;
    private UUID productId;
    private Integer quantity;

    public ProductsInCarts() {}

    public ProductsInCarts(IProductsInCarts value) {
        this.cartId = value.getCartId();
        this.productId = value.getProductId();
        this.quantity = value.getQuantity();
    }

    public ProductsInCarts(
        UUID cartId,
        UUID productId,
        Integer quantity
    ) {
        this.cartId = cartId;
        this.productId = productId;
        this.quantity = quantity;
    }

    /**
     * Getter for <code>products_in_carts.cart_id</code>.
     */
    @Override
    public UUID getCartId() {
        return this.cartId;
    }

    /**
     * Setter for <code>products_in_carts.cart_id</code>.
     */
    @Override
    public void setCartId(UUID cartId) {
        this.cartId = cartId;
    }

    /**
     * Getter for <code>products_in_carts.product_id</code>.
     */
    @Override
    public UUID getProductId() {
        return this.productId;
    }

    /**
     * Setter for <code>products_in_carts.product_id</code>.
     */
    @Override
    public void setProductId(UUID productId) {
        this.productId = productId;
    }

    /**
     * Getter for <code>products_in_carts.quantity</code>.
     */
    @Override
    public Integer getQuantity() {
        return this.quantity;
    }

    /**
     * Setter for <code>products_in_carts.quantity</code>.
     */
    @Override
    public void setQuantity(Integer quantity) {
        this.quantity = quantity;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final ProductsInCarts other = (ProductsInCarts) obj;
        if (this.cartId == null) {
            if (other.cartId != null)
                return false;
        }
        else if (!this.cartId.equals(other.cartId))
            return false;
        if (this.productId == null) {
            if (other.productId != null)
                return false;
        }
        else if (!this.productId.equals(other.productId))
            return false;
        if (this.quantity == null) {
            if (other.quantity != null)
                return false;
        }
        else if (!this.quantity.equals(other.quantity))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.cartId == null) ? 0 : this.cartId.hashCode());
        result = prime * result + ((this.productId == null) ? 0 : this.productId.hashCode());
        result = prime * result + ((this.quantity == null) ? 0 : this.quantity.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ProductsInCarts (");

        sb.append(cartId);
        sb.append(", ").append(productId);
        sb.append(", ").append(quantity);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IProductsInCarts from) {
        setCartId(from.getCartId());
        setProductId(from.getProductId());
        setQuantity(from.getQuantity());
    }

    @Override
    public <E extends IProductsInCarts> E into(E into) {
        into.from(this);
        return into;
    }
}
