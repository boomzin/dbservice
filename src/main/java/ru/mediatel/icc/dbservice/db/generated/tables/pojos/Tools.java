/*
 * This file is generated by jOOQ.
 */
package ru.mediatel.icc.dbservice.db.generated.tables.pojos;


import java.util.UUID;

import javax.annotation.processing.Generated;

import ru.mediatel.icc.dbservice.db.generated.tables.interfaces.ITools;
import ru.mediatel.icc.dbservice.model.tool.ToolDefinition;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.24"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Tools implements ITools {

    private static final long serialVersionUID = 1L;

    private UUID id;
    private ToolDefinition definition;

    public Tools() {}

    public Tools(ITools value) {
        this.id = value.getId();
        this.definition = value.getDefinition();
    }

    public Tools(
        UUID id,
        ToolDefinition definition
    ) {
        this.id = id;
        this.definition = definition;
    }

    /**
     * Getter for <code>tools.id</code>.
     */
    @Override
    public UUID getId() {
        return this.id;
    }

    /**
     * Setter for <code>tools.id</code>.
     */
    @Override
    public void setId(UUID id) {
        this.id = id;
    }

    /**
     * Getter for <code>tools.definition</code>.
     */
    @Override
    public ToolDefinition getDefinition() {
        return this.definition;
    }

    /**
     * Setter for <code>tools.definition</code>.
     */
    @Override
    public void setDefinition(ToolDefinition definition) {
        this.definition = definition;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Tools other = (Tools) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.definition == null) {
            if (other.definition != null)
                return false;
        }
        else if (!this.definition.equals(other.definition))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.definition == null) ? 0 : this.definition.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Tools (");

        sb.append(id);
        sb.append(", ").append(definition);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(ITools from) {
        setId(from.getId());
        setDefinition(from.getDefinition());
    }

    @Override
    public <E extends ITools> E into(E into) {
        into.from(this);
        return into;
    }
}
