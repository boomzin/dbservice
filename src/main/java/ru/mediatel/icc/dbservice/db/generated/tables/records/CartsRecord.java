/*
 * This file is generated by jOOQ.
 */
package ru.mediatel.icc.dbservice.db.generated.tables.records;


import java.time.LocalDateTime;
import java.util.UUID;

import javax.annotation.processing.Generated;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

import ru.mediatel.icc.dbservice.db.generated.enums.CartStatus;
import ru.mediatel.icc.dbservice.db.generated.tables.Carts;
import ru.mediatel.icc.dbservice.db.generated.tables.interfaces.ICarts;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.24"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class CartsRecord extends UpdatableRecordImpl<CartsRecord> implements ICarts {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>carts.id</code>.
     */
    @Override
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>carts.id</code>.
     */
    @Override
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>carts.user_id</code>.
     */
    @Override
    public void setUserId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>carts.user_id</code>.
     */
    @Override
    public UUID getUserId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>carts.status</code>.
     */
    @Override
    public void setStatus(CartStatus value) {
        set(2, value);
    }

    /**
     * Getter for <code>carts.status</code>.
     */
    @Override
    public CartStatus getStatus() {
        return (CartStatus) get(2);
    }

    /**
     * Setter for <code>carts.created_at</code>.
     */
    @Override
    public void setCreatedAt(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>carts.created_at</code>.
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>carts.updated_at</code>.
     */
    @Override
    public void setUpdatedAt(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>carts.updated_at</code>.
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>carts.customer_comment</code>.
     */
    @Override
    public void setCustomerComment(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>carts.customer_comment</code>.
     */
    @Override
    public String getCustomerComment() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(ICarts from) {
        setId(from.getId());
        setUserId(from.getUserId());
        setStatus(from.getStatus());
        setCreatedAt(from.getCreatedAt());
        setUpdatedAt(from.getUpdatedAt());
        setCustomerComment(from.getCustomerComment());
        resetChangedOnNotNull();
    }

    @Override
    public <E extends ICarts> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CartsRecord
     */
    public CartsRecord() {
        super(Carts.CARTS);
    }

    /**
     * Create a detached, initialised CartsRecord
     */
    public CartsRecord(UUID id, UUID userId, CartStatus status, LocalDateTime createdAt, LocalDateTime updatedAt, String customerComment) {
        super(Carts.CARTS);

        setId(id);
        setUserId(userId);
        setStatus(status);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        setCustomerComment(customerComment);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised CartsRecord
     */
    public CartsRecord(ru.mediatel.icc.dbservice.db.generated.tables.pojos.Carts value) {
        super(Carts.CARTS);

        if (value != null) {
            setId(value.getId());
            setUserId(value.getUserId());
            setStatus(value.getStatus());
            setCreatedAt(value.getCreatedAt());
            setUpdatedAt(value.getUpdatedAt());
            setCustomerComment(value.getCustomerComment());
            resetChangedOnNotNull();
        }
    }
}
