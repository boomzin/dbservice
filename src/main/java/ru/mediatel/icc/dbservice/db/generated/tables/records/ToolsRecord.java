/*
 * This file is generated by jOOQ.
 */
package ru.mediatel.icc.dbservice.db.generated.tables.records;


import java.util.UUID;

import javax.annotation.processing.Generated;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

import ru.mediatel.icc.dbservice.db.generated.tables.Tools;
import ru.mediatel.icc.dbservice.db.generated.tables.interfaces.ITools;
import ru.mediatel.icc.dbservice.model.tool.ToolDefinition;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.24"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ToolsRecord extends UpdatableRecordImpl<ToolsRecord> implements ITools {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>tools.id</code>.
     */
    @Override
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>tools.id</code>.
     */
    @Override
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>tools.definition</code>.
     */
    @Override
    public void setDefinition(ToolDefinition value) {
        set(1, value);
    }

    /**
     * Getter for <code>tools.definition</code>.
     */
    @Override
    public ToolDefinition getDefinition() {
        return (ToolDefinition) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(ITools from) {
        setId(from.getId());
        setDefinition(from.getDefinition());
        resetChangedOnNotNull();
    }

    @Override
    public <E extends ITools> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ToolsRecord
     */
    public ToolsRecord() {
        super(Tools.TOOLS);
    }

    /**
     * Create a detached, initialised ToolsRecord
     */
    public ToolsRecord(UUID id, ToolDefinition definition) {
        super(Tools.TOOLS);

        setId(id);
        setDefinition(definition);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised ToolsRecord
     */
    public ToolsRecord(ru.mediatel.icc.dbservice.db.generated.tables.pojos.Tools value) {
        super(Tools.TOOLS);

        if (value != null) {
            setId(value.getId());
            setDefinition(value.getDefinition());
            resetChangedOnNotNull();
        }
    }
}
