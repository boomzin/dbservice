/*
 * This file is generated by jOOQ.
 */
package ru.mediatel.icc.dbservice.db.generated.tables.records;


import java.util.UUID;

import javax.annotation.processing.Generated;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

import ru.mediatel.icc.dbservice.db.generated.tables.Users;
import ru.mediatel.icc.dbservice.db.generated.tables.interfaces.IUsers;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.24"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class UsersRecord extends UpdatableRecordImpl<UsersRecord> implements IUsers {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>users.id</code>.
     */
    @Override
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>users.id</code>.
     */
    @Override
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>users.phone</code>.
     */
    @Override
    public void setPhone(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>users.phone</code>.
     */
    @Override
    public Integer getPhone() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>users.email</code>.
     */
    @Override
    public void setEmail(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>users.email</code>.
     */
    @Override
    public String getEmail() {
        return (String) get(2);
    }

    /**
     * Setter for <code>users.tg</code>.
     */
    @Override
    public void setTg(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>users.tg</code>.
     */
    @Override
    public String getTg() {
        return (String) get(3);
    }

    /**
     * Setter for <code>users.description</code>.
     */
    @Override
    public void setDescription(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>users.description</code>.
     */
    @Override
    public String getDescription() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IUsers from) {
        setId(from.getId());
        setPhone(from.getPhone());
        setEmail(from.getEmail());
        setTg(from.getTg());
        setDescription(from.getDescription());
        resetChangedOnNotNull();
    }

    @Override
    public <E extends IUsers> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsersRecord
     */
    public UsersRecord() {
        super(Users.USERS);
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(UUID id, Integer phone, String email, String tg, String description) {
        super(Users.USERS);

        setId(id);
        setPhone(phone);
        setEmail(email);
        setTg(tg);
        setDescription(description);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(ru.mediatel.icc.dbservice.db.generated.tables.pojos.Users value) {
        super(Users.USERS);

        if (value != null) {
            setId(value.getId());
            setPhone(value.getPhone());
            setEmail(value.getEmail());
            setTg(value.getTg());
            setDescription(value.getDescription());
            resetChangedOnNotNull();
        }
    }
}
